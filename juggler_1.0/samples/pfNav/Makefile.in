# -----------------------------------------------------------------------------
# Makefile.in for juggler/samples/pfNav.  It requires GNU make.
# $Id$
#
# Generated for use on @PLATFORM@
# -----------------------------------------------------------------------------

.SUFFIXES: .cpp .@OBJ_FILE_SUFFIX@

srcdir		= @srcdir@

EXTRA_FLAGS	= @TEST_EXTRA_FLAGS@ -all 
COMPILE		= @CXX@ -DUSESOUND @DEFS@ $(VJ_INCLUDES) @CPPFLAGS@ @CXXFLAGS@ @DBG_FLAGS@ $(EXTRA_FLAGS)
LINK		= @CXX@ @CPPFLAGS@ @CXXFLAGS@ @EXTRA_LINK_FLAGS@ $(EXTRA_FLAGS)
AW_LIB = 	-L/usr/lib32/PSI -law -lawhwi -lpsi -laudiofile
AW_INCLUDE = -I/usr/include/PSI
VJ_INCLUDES	= @INCLUDES@ $(AW_INCLUDE) -I$(VJ_BASE_DIR)/include			\
                  -I$(VJ_BASE_DIR)/include/Math -I$(srcdir)		\
                  -I$(srcdir)/../nav -I$(srcdir)/../pfTools 		\
<<<<<<< Makefile.in
                  -I$(srcdir)/../../Sound/
VJ_LIBS		= @TEST_VJ_LIBS_BASIC@ @TEST_VJ_LIBS_GL@ @TEST_VJ_LIBS_PF@ -lJuggler_aw $(AW_LIB) @TEST_LIBS_BASIC@
=======
                  -I$(VJ_BASE_DIR)/include/Sound
VJ_LIBS		= @TEST_VJ_LIBS_BASIC@ @TEST_VJ_LIBS_GL@ @TEST_VJ_LIBS_PF@ @TEST_LIBS_BASIC@
VJ_LIB_DEPS	= $(VJ_BASE_DIR)/lib32/libJuggler.a			\
                  $(VJ_BASE_DIR)/lib32/libJuggler_ogl.a			\
                  $(VJ_BASE_DIR)/lib32/libJuggler_pf.a
>>>>>>> 1.43

vpath %.cpp @srcdir@ @srcdir@/../nav @srcdir@/../pfTools

# This test program requires the following libraries to be linked:
#
#     -lpf_ogl -lpfdu_ogl -lpfui -lpfutil_ogl -limage -lGLU -lGL -lXext \
#     -lXmu -lX11 -lm -lC
#
# If the library uses POSIX threads, "-lpthread" must also be added to the
# list of libraries.
#
# The proper library path must be specified depending on the Application
# Binary Interface (ABI) used.  For o32 binaries, -L/usr/lib is the
# appropriate path.  For n32 binaries, use -L/usr/lib32.  For 64-bit binaries,
# use -L/usr/lib64.
EXTRA_LIBS	= @TEST_EXTRA_LIBS_BASIC@ @TEST_EXTRA_LIBS_PF@ @TEST_EXTRA_LIBS_GL@

COMMON_OBJECTS = fileIO.@OBJ_FILE_SUFFIX@		\
                  pfFileIO.@OBJ_FILE_SUFFIX@		\
                  pfTerryCollide.@OBJ_FILE_SUFFIX@	\
                  pfTerryPogoCollide.@OBJ_FILE_SUFFIX@	\
                  pfTerryBoxCollide.@OBJ_FILE_SUFFIX@	\
                  pfMPStats.@OBJ_FILE_SUFFIX@

PFNAV_OBJECTS = pfNav.@OBJ_FILE_SUFFIX@ $(COMMON_OBJECTS)

PF_BASIC_CONFIG_NAV_OBJECTS = pfBasicConfigNav.@OBJ_FILE_SUFFIX@ $(COMMON_OBJECTS)

PF_SWITCHER_OBJECTS = pfSwitcher.@OBJ_FILE_SUFFIX@ pfSwitcherApp.@OBJ_FILE_SUFFIX@ $(COMMON_OBJECTS)

# -----------------------------------------------------------------------------
# Targets.
# -----------------------------------------------------------------------------
default: pfNav

all: pfNav pfBasicConfigNav pfSwitcher

pfNav: $(PFNAV_OBJECTS) $(VJ_LIB_DEPS)
	$(LINK) -o $@ $(PFNAV_OBJECTS) $(VJ_LIBS) $(EXTRA_LIBS)

pfBasicConfigNav: $(PF_BASIC_CONFIG_NAV_OBJECTS) $(VJ_LIB_DEPS)
	$(LINK) -o $@ $(PF_BASIC_CONFIG_NAV_OBJECTS) $(VJ_LIBS) $(EXTRA_LIBS)

pfSwitcher: $(PF_SWITCHER_OBJECTS) $(VJ_LIB_DEPS)
	$(LINK) -o $@ $(PF_SWITCHER_OBJECTS) $(VJ_LIBS) $(EXTRA_LIBS)

.cpp.@OBJ_FILE_SUFFIX@:
	$(COMPILE) @OBJ_NAME_FLAG@ -c $<

# -----------------------------------------------------------------------------
# Clean-up.
# -----------------------------------------------------------------------------
clean:
	rm -f Makedepend pfNav pfBasicConfigNav pfNav.exe pfNav.ilk \
	$(PFNAV_OBJECTS) $(PF_BASIC_CONFIG_NAV_OBJECTS) $(PF_SWITCHER_OBJECTS) \
	*core	\
	so_locations *.?db
	rm -rf ./ii_files

# -----------------------------------------------------------------------------
# Dependency stuff.
# -----------------------------------------------------------------------------
DEP_GEN_FLAG	= @DEP_GEN_FLAG@
DEPEND_FILES	= $(PFNAV_OBJECTS:.@OBJ_FILE_SUFFIX@=.d)		\
                  $(PF_BASIC_CONFIG_NAV_OBJECTS:.@OBJ_FILE_SUFFIX@=.d)

# This expression reformats the output from the dependency text to be of the
# form:
#
#     file1.o file1.d : ...
#
# where file1 is the value in $* and file1.d is $@.  It handles output from
# the C and C++ compilers which prints only the object file to be created ($*).
_CC_SED_EXP	= '\''s/\($*\)\.@OBJ_FILE_SUFFIX@[ :]*/.\/\1.@OBJ_FILE_SUFFIX@ $@: /g'\''

%.d: %.cpp
	@echo "Updating dependency file $@ ..."
	@$(SHELL) -ec '$(COMPILE) $(DEP_GEN_FLAG) $< |			\
                       sed $(_CC_SED_EXP) > $@ ; [ -s $@ ] || rm -f $@'

include $(DEPEND_FILES)
