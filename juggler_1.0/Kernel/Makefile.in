# -----------------------------------------------------------------------------
# Makefile.in for c2lib/Kernel
# $Id$
# -----------------------------------------------------------------------------

.SUFFIXES	=

SHELL		= /bin/sh

bindir		= @bindir@
datadir		= @datadir@
exec_prefix	= @exec_prefix@
includedir	= @includedir@
libdir		= @libdir@
libexecdir	= @libexecdir@
prefix		= @prefix@
sbindir		= @sbindir@
srcdir		= @srcdir@
sysconfdir	= @sysconfdir@
topdir		= @topdir@
top_srcdir	= @top_srcdir@
wwwdir		= ${srcdir}/Doc
VJROOT		= ${top_srcdir}
VJROOT_ABS	= @VJROOT_ABS@
VJ_SRCDIR	= @VJ_SRCDIR@/Kernel
WORKDIR		= ${topdir}/Kernel

# Include commom definitions
include @topdir@/Makefile.base

# Subdirectories to compile
SUBDIRS = Pf GL

#--- Search path -------
vpath
vpath %.c @srcdir@
vpath %.C @srcdir@
vpath %.o ${OBJDIR}
#------------------------

    
DEPEND_SRCS	:= vjAPI.C			\
                  vjDebug.C			\
                  vjDisplay.C			\
                  vjDisplayManager.C		\
                  vjDrawManager.C		\
                  vjFrustum.C			\
                  vjKernel.C			\
                  vjProjection.C		\
                  vjWallProjection.C		\
		  vjSGISystemFactory.C


KERNEL_OBJECTS	= $(addprefix $(OBJDIR)/,$(DEPEND_SRCS:.C=.o))

LIBRARY		= libJuggler

@SET_MAKE@

# -----------------------------------------------------------------------------
# Library targets.
# -----------------------------------------------------------------------------

default: all

dbg: dbg-recursive

opt: opt-recursive 

dso: dso-recursive 

ddso: ddso-recursive 

obj: obj-recursive 

all: dbg opt dso ddso ${KERNEL_OBJECTS}

depend: depend-recursive .depend_done

newdepend: newdepend-recursive
	rm .depend_done && ${MAKE} depend

# This target will allow the 'depend' target to be built only once.
.depend_done:
	cd ${srcdir} &&							\
          makedepend -f${WORKDIR}/Makefile -p'$${OBJDIR}/'		\
              ${DEPENDFLAGS} -- ${DEPEND_EXTRAS} -- ${DEPEND_SRCS} &&	\
          touch ${WORKDIR}/.depend_done

#--- RECERSIVE ---
all-recursive install-recursive dbg-recursive opt-recursive		\
dso-recursive ddso-recursive obj-recursive depend-recursive		\
newdepend-recursive:
	@set fnord ${MAKEFLAGS}; amf=$$2;				\
            list='${SUBDIRS}';						\
            for subdir in $$list; do					\
                target=`echo $@ | sed s/-recursive//`;			\
                echo "Making $$target in Kernel/$$subdir";		\
                (cd $$subdir && ${MAKE} OPTIMIZER="${OPTIMIZER}"	\
                                    OBJDIR=${OBJDIR} $$target)		\
                    || case "$$amf" in					\
                         *=*) exit 1;;					\
                         *k*) fail=yes;;				\
                         *) exit 1;; esac;				\
            done && test -z "$$fail"


# -----------------------------------------------------------------------------
# Clean-up.
# -----------------------------------------------------------------------------
clean-recursive:
	@set fnord ${MAKEFLAGS}; amf=$$2;		\
            rev=''; list='${SUBDIRS}';			\
            for subdir in $$list; do			\
                rev="$$subdir $$rev";			\
            done;					\
            for subdir in $$rev; do			\
                target=`echo $@ | sed s/-recursive//`;	\
                echo "Making $$target in $$subdir";	\
                (cd $$subdir && ${MAKE} $$target)	\
                    || case "$$amf" in			\
                         *=*) exit 1;;			\
                         *k*) fail=yes;;		\
                         *) exit 1;;			\
                       esac;				\
            done && test -z "$$fail"

clean: clean-recursive
	rm -f .depend_done Makedepend ${KERNEL_OBJECTS} *.o core so_locations

# -----------------------------------------------------------------------------
# Dependencies generated by makedepend(1).
# -----------------------------------------------------------------------------

# DO NOT DELETE THIS LINE -- make depend depends on it.

