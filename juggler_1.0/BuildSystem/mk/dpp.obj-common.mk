# ************** <auto-copyright.pl BEGIN do not edit this line> **************
#
# Doozer++ is (C) Copyright 2000, 2001 by Iowa State University
#
# Original Author:
#   Patrick Hartling
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# *************** <auto-copyright.pl END do not edit this line> ***************

# =============================================================================
# dpp.obj-common.mk,v 1.13 2001/02/16 22:05:26 patrick Exp
#
# This file <dpp.obj-subdir.mk> is intended to be used by makefiles that need
# to build object files AND to recurse into subdirectories.  It defines
# variables and targets that are common to all such makefiles.  It also
# includes other .mk files that are typically necessary for this process.
# -----------------------------------------------------------------------------
# The makefile including this file must define the following variables:
#
# srcdir        - The directory containing the source files to compile.
# OBJEXT        - The suffix used for object files (usually .o or .obj).
# SRCS          - The C++ sources to be compiled.
# JAVA_SRCS     - The Java sources to be compiled.
# MKINSTALLDIRS - Path to shell script for making directories.
#
# Optionally, it can define the following variables for added functionality:
#
# EXTRA_SRCS_PATH - Directories besides $(srcdir) where source files may be
#                   found.
# OBJDIR          - The directory where the object files will go.  This
#                   defaults to the current directory.
# IDL_CPP_SRCS    - The C++ source files generated by the IDL compiler that
#                   need to be compiled with the other sources.
# IDL_JAVA_SRCS   - The Java source files generated by the Java IDL compiler
#                   that need to be compiled with the other sources.
# =============================================================================

ifdef BASE_OBJDIR
    OBJDIR	= $(BASE_OBJDIR)
else
    OBJDIR	?= .
endif

ifneq ($(OBJDIR), .)
    ifdef SUBOBJDIR
        OBJDIR := $(OBJDIR)/$(SUBOBJDIR)
    endif
endif

vpath %.c $(srcdir) $(EXTRA_SRCS_PATH)
vpath %.C $(srcdir) $(EXTRA_SRCS_PATH)
vpath %.CC $(srcdir) $(EXTRA_SRCS_PATH)
vpath %.cc $(srcdir) $(EXTRA_SRCS_PATH)
vpath %.cpp $(srcdir) $(EXTRA_SRCS_PATH)
vpath %.c++ $(srcdir) $(EXTRA_SRCS_PATH)
vpath %.cxx $(srcdir) $(EXTRA_SRCS_PATH)
vpath %.$(OBJEXT) $(OBJDIR)
vpath %.java $(srcdir) $(EXTRA_JAVA_SRCS_PATH)
vpath %.class $(srcdir) $(CLASSDIR)
vpath %.idl $(srcdir) $(EXTRA_SRCS_PATH) $(EXTRA_JAVA_SRCS_PATH)

# Define the list of supported source file suffixes.
_suffix_list	= c C CC cc cpp c++ cxx

makeobjs	= $(filter %.$(OBJEXT), $(foreach _suffix, $(_suffix_list), $(1:.$(_suffix)=.$(OBJEXT))))

BASIC_OBJECTS	= $(call makeobjs, $(IDL_CPP_SRCS))		\
                  $(call makeobjs, $(SRCS))
BASIC_CLASSES	= $(IDL_JAVA_SRCS:.java=.class) $(JAVA_SRCS:.java=.class)

OBJECTS		= $(addprefix $(OBJDIR)/, $(BASIC_OBJECTS))
CLASSES		= $(addprefix $(OBJDIR)/, $(BASIC_CLASSES))

do-build: $(OBJECTS) $(TARGETS)

do-java-build: $(CLASSES) $(JAVA_TARGETS)

do-beforebuild:
	@$(SHELL) $(MKINSTALLDIRS) $(OBJDIR)
