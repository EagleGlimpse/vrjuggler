<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Device Interface</title>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">


</head>

<body>

<h3>vjPosInterface, vjAnalogInterface, vjDigitalInterface, vjGloveInterface,
vjGestureInterface, vjKeyboardInterface</h3>

<p>See also: <a href="../../class_docs/vjDeviceInterface.html">vjDeviceInterface</a></p>

<p>All of the device interface classes work the same way.&nbsp; They act as &quot;smart
pointers&quot; to proxy devices.&nbsp; This means that once initialized they can be used
as if they were just simple pointers to proxy objects.</p>

<blockquote>
  <p><font face="System">Ex:<br>
  vjPosInterface head; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Declare an interface<br>
  head.init(&quot;VJHead&quot;); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Initialize to
  &quot;point&quot; to the VJHead device<br>
  head_matrix = head-&gt;getData();&nbsp;&nbsp;&nbsp;&nbsp; // Treat as proxy and get data</font></p>
</blockquote>

<h3>Interface</h3>

<h4>void init(string deviceName)</h4>

<p>Initialize the interface to point to the device named in the parameter.&nbsp; The
parameter deviceName is either the name of a proxy in the system or a proxy alias. &nbsp;
Using this name, the interface finds the proxy object to interact with.</p>

<p>This function must be called before the object is used.&nbsp; The device must also be
of the same type as the interface object.&nbsp; For example, a vjAnalogInterface cannot
work correctly if the init function is called to make it point to a positional device.</p>

<h4>operator-&gt;(), and operator*()</h4>

<p>These are the operators that allow the object to function as a &quot;smart
pointer&quot;.&nbsp; This allows the user to simply treat the vjInterface objects as if
they were pointers to the actual device proxy.&nbsp; If the object is dereferenced it will
dereference to a device proxy.&nbsp; This proxy can then be used to get the device data.</p>
&nbsp;</body>
</html>
