<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>BaseApp</title>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">


</head>

<body>

<p>&nbsp;</p>

<h3>Control Loop</h3>

<p>The Kernel will execute the application using a control loop similar to this one.
&nbsp; The functions in <strong>bold</strong> are member functions of the base application
class vjApp.&nbsp; These functions are inherited by every application class.</p>

<p><strong>NOTE</strong>: Notice that the preDraw() and postDraw() functions are <strong>not</strong>
called in a process that is actually drawing.&nbsp; They do <strong>not</strong> have a
drawing context, therefore no drawing code should be placed in preDraw() or postDraw().</p>

<p><strong>app.init</strong>();<br>
<strong>app.apiInit</strong>();<br>
<br>
while (drawing)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp; <strong>app.preDraw</strong>();<br>
&nbsp;&nbsp;&nbsp;&nbsp; draw();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Draw the graphics<br>
&nbsp;&nbsp;&nbsp;&nbsp; <strong>app.postDraw</strong>();<br>
&nbsp;&nbsp;&nbsp;&nbsp; sync();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Synchronize
Juggler system<br>
&nbsp;&nbsp;&nbsp;&nbsp; <strong>app.postSync</strong>();<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp; UpdateTrackers();<br>
}<br>
<br>
<strong>app.exit</strong>();</p>

<hr>

<h3>Interface</h3>

<blockquote>
</blockquote>

<h4>virtual void init()</h4>

<blockquote>
  <p>Execute any initialization needed before the API is started.&nbsp; This could be
  initialization of application data, loading of application confiuration files, etc.</p>
  <p>&nbsp;</p>
</blockquote>

<blockquote>
</blockquote>

<h4>virtual void apiInit()</h4>

<blockquote>
  <p>Execute any initialization needed <strong>after</strong> graphics API is started but
  before the drawManager starts the drawing loops.&nbsp; this function would normally call
  any configuration routines that need to deal specifically with the graphics API being
  used.&nbsp; For example in a Performer application this is where the scene graph would be
  constructed that will be used in the application.</p>
</blockquote>

<blockquote>
</blockquote>

<blockquote>
  <p>&nbsp;</p>
</blockquote>

<blockquote>
</blockquote>

<h4>virtual void preDraw()</h4>

<blockquote>
  <p>Function called after tracker update but before start of drawing.</p>
  <p>&nbsp;</p>
</blockquote>

<blockquote>
</blockquote>

<h4>virtual void postDraw()</h4>

<blockquote>
  <p>Function called after drawing has been triggered but BEFORE it completes.&nbsp; Notice
  that this means that if the drawing routines are executing during this phase.</p>
  <p>&nbsp;</p>
</blockquote>

<blockquote>
</blockquote>

<h4>virtual void postSync()</h4>

<blockquote>
  <p>Function called before updating trackers but after the frame has completed drawing.</p>
</blockquote>

<p>&nbsp;</p>

<h4>virtual void exit()</h4>

<blockquote>
  <p>Execute any final cleanup needed for the application</p>
</blockquote>
&nbsp;</body>
</html>
