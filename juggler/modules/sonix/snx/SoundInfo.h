/* Generated by Together */

#ifndef SOUND_INFO_DATA
#define SOUND_INFO_DATA
#include <string>


namespace aj
{

/**
 * info struct that describes one sound entry.
 */
struct SoundInfo
{
   SoundInfo() : ambient( true ), triggerOnNextBind( false ), datasource( FILESYSTEM ), repeat( 1 ), repeatCountdown( 0 ), data(), filename()
   {
      //position.makeIdent();
   }
   std::string alias;

   enum DataSource
   {
      FILESYSTEM, DATA_16_MONO, DATA_8_MONO
   };
   DataSource datasource; // which of the following resources to use...

   // source of the sound...
   std::string filename;
   std::string data; // TODO: i'll probably want to double buffer this...

   float position[3];
   
   bool ambient;  // is the sound ambient (true) or positional (false)?
   int repeat;           // number of times to repeat (static)

   // -----------------------------------------------
   bool triggerOnNextBind;
   int repeatCountdown; // number of times left to repeat (changes during play)
};

}; // end namespace

#endif //SOUND_INFO_DATA
