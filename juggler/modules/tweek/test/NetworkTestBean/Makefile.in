# Generated by mkmakefile.pl using the following options:
#    --app=server

default: all

# Basic options.
srcdir			= @srcdir@
CFLAGS			= @APP_CFLAGS@ $(EXTRA_CFLAGS) $(INCLUDES) $(DEFS)
CXXFLAGS		= @APP_CXXFLAGS@ $(EXTRA_CFLAGS) $(INCLUDES) $(DEFS)
CXX_IDL_OPTS		= -bcxx -Wbh=.h,s=.cpp -C$(srcdir)
CXX_IDL_INCLUDES	= -I$(TWEEK_BASE_DIR)/include
JAVAC_FLAGS		= -classpath $(CLASSPATH) -sourcepath $(srcdir) -d .
JAVA_IDL_OPTS		= -emitAll -td $(srcdir)
JAVA_IDL_INCLUDES	= -i $(TWEEK_BASE_DIR)/include
JCPS			= @JCPS@

CLASSPATH		= @JDOM_JAR@$(JCPS)$(TWEEK_BASE_DIR)/bin/TweekNet.jar
DEFS			= @APP_DEFS@
EXTRA_CFLAGS		= @APP_EXTRA_CFLAGS@ $(DEBUG_CFLAGS)
DEBUG_CFLAGS		= @APP_DEBUG_CFLAGS@
OPTIM_CFLAGS		= @APP_OPTIM_CFLAGS@
INCLUDES		= @APP_INCLUDES@ -I$(srcdir)

EXTRA_LFLAGS		= @APP_EXTRA_LFLAGS@ $(DEBUG_LFLAGS)
DEBUG_LFLAGS		= @APP_DEBUG_LFLAGS@
OPTIM_LFLAGS		= @APP_OPTIM_LFLAGS@
LINK_FLAGS		= @APP_LINK_FLAGS@ $(EXTRA_LFLAGS)

# Libraries needed for linking.
BASIC_LIBS	= @APP_BASIC_LIBS_BEGIN@ @APP_BASIC_LIBS@  @APP_BASIC_EXT_LIBS@ @APP_BASIC_LIBS_END@
EXTRA_LIBS	= @APP_EXTRA_LIBS_BEGIN@ @APP_EXTRA_LIBS@  @APP_EXTRA_LIBS_END@ 

# Commands to execute.
C_COMPILE		= @APP_CC@ $(CFLAGS)
CXX_IDL			= @CXX_IDL@
CXX_COMPILE		= @APP_CXX@ $(CXXFLAGS)
JAVA_COMPILE		= @JAVAC@ $(JAVAC_FLAGS)
JAVA_IDL		= @JAVA_IDL@
JAR			= @JAR@
LINK			= @APP_LINK@ $(LINK_FLAGS)

VPATH		= @srcdir@:@srcdir@/networktest:@srcdir@/tweek:$(TWEEK_BASE_DIR)/include/tweek/idl

IDL_CXX_FILES	= SliderSubject.cpp SliderSubject.h		\
                  WhiteboardSubject.cpp WhiteboardSubject.h
IDL_JAVA_FILES	= SliderSubject.java		\
                  WhiteboardSubject.java	\
                  Observer.java

OBJS		= SliderSubject.@OBJEXT@ SliderSubjectImpl.@OBJEXT@	\
                  WhiteboardSubject.@OBJEXT@ WhiteboardSubjectImpl.@OBJEXT@ \
                  main.@OBJEXT@
CLASSES		= networktest/NetworkTest.class			\
                  networktest/SliderObserverImpl.class		\
                  networktest/SliderSubjectHolder.class		\
                  networktest/WhiteboardObserverImpl.class	\
                  networktest/WhiteboardSubjectHolder.class	\
                  tweek/ObserverHolder.class

NETWORK_TEST_CLASSES	= networktest/*.class tweek/*.class

# -----------------------------------------------------------------------------
# Application build targets.
# -----------------------------------------------------------------------------
all:
	$(MAKE) cxx_idl
	$(MAKE) java_idl
	$(MAKE) cxx
	$(MAKE) server
	$(MAKE) java
	$(MAKE) NetworkTestBean.jar

cxx_idl: $(IDL_CXX_FILES)

java_idl: $(IDL_JAVA_FILES)

cxx: $(OBJS)

java: $(CLASSES)

server@EXEEXT@: $(OBJS)
	$(LINK) @EXE_NAME_FLAG@ $(OBJS) $(BASIC_LIBS) $(EXTRA_LIBS)

NetworkTestBean.jar: $(CLASSES)
	$(JAR) cvfm $@ $(srcdir)/networktest.MF $(NETWORK_TEST_CLASSES)

# Suffix rules for building object files.
.SUFFIXES: .cpp .@OBJEXT@ .java .class .idl .h

.cpp.@OBJEXT@:
	$(CXX_COMPILE) @OBJ_NAME_FLAG@ @OBJ_BUILD_FLAG@ $<

.java.class:
	$(JAVA_COMPILE) $<

.idl.cpp:
	$(CXX_IDL) $(CXX_IDL_OPTS) $(CXX_IDL_INCLUDES) $<

.idl.h:
	$(CXX_IDL) $(CXX_IDL_OPTS) $(CXX_IDL_INCLUDES) $<

Observer.java: Observer.idl
	$(JAVA_IDL) $(JAVA_IDL_OPTS) -fserver $(JAVA_IDL_INCLUDES) $<

.idl.java:
	$(JAVA_IDL) $(JAVA_IDL_OPTS) $(JAVA_IDL_INCLUDES) $<

# -----------------------------------------------------------------------------
# Clean-up targets.
# -----------------------------------------------------------------------------
clean:
	rm -f Makedepend *.@OBJEXT@ networktest.ilk  so_locations *.?db	\
          core* $(addprefix $(srcdir)/, $(IDL_CXX_FILES))		\
          $(addprefix $(srcdir)/networktest/, $(IDL_JAVA_FILES))
	rm -rf ii_files $(srcdir)/tweek

clobber:
	@$(MAKE) clean
	rm -f server@EXEEXT@ 
