#!/bin/sh

# ************** <auto-copyright.pl BEGIN do not edit this line> **************
#
# VR Juggler is (C) Copyright 1998, 1999, 2000 by Iowa State University
#
# Original Authors:
#   Allen Bierbaum, Christopher Just,
#   Patrick Hartling, Kevin Meinert,
#   Carolina Cruz-Neira, Albert Baker
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# -----------------------------------------------------------------
# File:          $RCSfile$
# Date modified: $Date$
# Version:       $Revision$
# -----------------------------------------------------------------
#
# *************** <auto-copyright.pl END do not edit this line> ***************

%{
%}

gad_libs="@gad_libs@"

gadget_default_abi="@ABI@"
gadget_default_isa="@ISA@"
gadget_n32_flags="@gadget_n32_flags@"
gadget_64_flags="@gadget_64_flags@"
LIBBITSUF='@LIBBITSUF@'

if [ "x$gadget_default_abi" = "xN32" ]; then
    gadget_abi_flags="$gadget_n32_flags"
elif [ "x$gadget_default_abi" = "x64" ]; then
    gadget_abi_flags="$gadget_64_flags"
else
    gadget_abi_flags=''
fi

if [ "x$gadget_default_isa" = "xmips3" -o "x$gadget_default_isa" = "xmips4" ]
then
    gadget_isa_flags="-$gadget_default_isa"
else
    gadget_isa_flags=''
fi

prefix=@prefix@
exec_prefix=@exec_prefix@
exec_prefix_set=no
use_linker='no'

usage()
{
    cat <<EOF
Usage: gadgeteer-config [OPTIONS] [LIBRARIES]
Options:
        [--basedir]             Use \$GADGET_BASE_DIR when printing paths
        [--prefix[=DIR]]        Print the installation prefix or set an
                                alternate prefix to use when printing paths
        [--exec-prefix[=DIR]]   Print the executable prefix or set an alternate
                                executable prefix to use when printing paths
        [--version]             Print the installed Gadgeteer's version number
        [--cxxflags [N32|64]]   Print the flags for the C++ compiler
        [--libs [N32|64]]       Print the basic Gadgeteer libraries
        [--extra-libs [N32|64]] Print the extra linker options needed for
                                making an executable
        [--subsystem]           Print the OS abstraction layer being used
Libraries (prints the linker options for one or more of these libraries):
        gadget
EOF

    exit $1
}

if test $# -eq 0; then
    usage 1 1>&2
fi

lib_gad=no

while test $# -gt 0; do
    case "$1" in
        -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
        *) optarg= ;;
    esac

    case $1 in
        --basedir)
            use_base_dir=yes
            ;;
        --prefix=*)
            prefix=$optarg
            if test $exec_prefix_set = no ; then
                exec_prefix=$optarg
            fi
            ;;
        --prefix)
            echo_prefix=yes
            ;;
        --exec-prefix=*)
            exec_prefix=$optarg
            exec_prefix_set=yes
            ;;
        --exec-prefix)
            echo_exec_prefix=yes
            ;;
        --version)
            echo @MAJOR_VERSION@.@MINOR_VERSION@.@MICRO_VERSION@
            ;;
        --cxxflags)
            echo_cxxflags=yes
            case $2 in
                --*)
                    # This is another option flag, so leave it alone.
                    ;;
                N32)
                    gadget_extra_cxxflags="$gadget_extra_cxxflags $gadget_n32_flags $gadget_isa_flags"
                    shift
                    ;;
                64)
                    gadget_extra_cxxflags="$gadget_extra_cxxflags $gadget_64_flags $gadget_isa_flags"
                    shift
                    ;;
                *)
                    gadget_extra_cxxflags="$gadget_extra_cxxflags $gadget_abi_flags $gadget_isa_flags"
                    if [ "x$2" != "x" ] ; then
                        shift
                    fi
                    ;;
            esac
            ;;
        --libs)
            echo_libs=yes
            case $2 in
                --*)
                    # This is another option flag, so leave it alone.
                    ;;
                N32)
                    ldflags="$gadget_n32_flags $gadget_isa_flags"
                    LIBBITSUF='32'
                    shift
                    ;;
                64)
                    ldflags="$gadget_64_flags $gadget_isa_flags"
                    LIBBITSUF='64'
                    shift
                    ;;
                *)
                    ldflags="$gadget_abi_flags $gadget_isa_flags"
                    if [ "x$2" != "x" ] ; then
                        shift
                    fi
                    ;;
            esac
            ;;
        --extra-libs)
            echo_extra_libs=yes
            case $2 in
                --*)
                    # This is another option flag, so leave it alone.
                    ;;
                N32)
                    LIBBITSUF='32'
                    shift
                    ;;
                64)
                    LIBBITSUF='64'
                    shift
                    ;;
                *)
                    if [ "x$2" != "x" ] ; then
                        shift
                    fi
                    ;;
            esac
            ;;
        --linker)
            use_linker=yes
            ;;
        --static)
            echo_static=yes
            ;;
        gad)
            lib_gad_all=yes
            ;;
        *)
            usage 1 1>&2
            ;;
    esac
    shift
done

if test "x$lib_gad_all" = "x" ; then
    lib_gad_all=yes
fi

if test "$echo_prefix" = "yes"; then
    if test "$use_base_dir" = "yes"; then
        echo $GADGET_BASE_DIR
    else
        echo $prefix
    fi
fi

if test "$echo_exec_prefix" = "yes"; then
    if test "$use_base_dir" = "yes"; then
        echo $GADGET_BASE_DIR
    else
        echo $exec_prefix
    fi
fi

if test "$echo_cxxflags" = "yes"; then
    if test "$use_base_dir" = "yes"; then
        echo @CXXFLAGS@ $gadget_extra_cxxflags -I$GADGET_BASE_DIR/include
    else
        echo @CXXFLAGS@ $gadget_extra_cxxflags -I@includedir@
    fi
fi

if test "$echo_static" = "yes" ; then
    static_begin='@static_begin@'
    static_end='@static_end@'
fi

if test "$echo_libs" = "yes"; then
    if test "$use_base_dir" = "yes"; then
        ldflags="$ldflags -L$GADGET_BASE_DIR/lib$LIBBITSUF"
    else
        if test "$use_linker" = "yes" ; then
            ldflags="$ldflags @gadget_ldflags_linker@"
        else
            ldflags="$ldflags @gadget_ldflags_compiler@"
        fi
    fi

    if test "x$lib_gad_all" = "xyes" ; then
        gad_libs="@gad_libs@"
    else
        if test "x$lib_gad" = "xyes" ; then
            gad_libs="$gad_lib"
        fi
    fi

    echo $ldflags $static_begin $gad_libs $static_end
fi      

if test "x$echo_extra_libs" = "xyes"; then
    gad_extra_ldflags="@gad_extra_ldflags@"
    gad_extra_libs="@gad_extra_libs@"
    echo $gad_extra_ldflags $gad_extra_libs
fi
