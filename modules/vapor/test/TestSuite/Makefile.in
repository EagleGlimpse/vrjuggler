###############################################################################$
# builder for test suite.  uses kevin's build system in @srcdir@/mk
###############################################################################$

default: build

srcdir		= @srcdir@
#top_srcdir	= @top_srcdir@


# objects to be included in the project....
# SRC Files
TEST_SRCS = 
CPPUNIT_TEXTUI_SRCS = TestRunner.cpp TextTestResult.cpp
CPPUNIT_SRCS = TestCase.cpp \
               TestResult.cpp \
               TestFailure.cpp \
               TestSuite.cpp
TESTDRIVER_SRCS = testSuite.cpp
SRCS	:= $(TEST_SRCS) $(CPPUNIT_TEXTUI_SRCS) $(CPPUNIT_SRCS) $(TESTDRIVER_SRCS)

# project name...
PROJECT_NAME = driver

OBJDIR = .
DEPDIR = 

INCLUDE_PATHS =  -I${srcdir} -I${srcdir}/TestCases -I${srcdir}/CppUnit/framework -I${srcdir}/CppUnit/textui
PATH_TO_SRCS = ${srcdir} ${srcdir}/TestCases ${srcdir}/CppUnit/framework ${srcdir}/CppUnit/textui
MK_DIR = ${srcdir}/mk

########################################################################
# system dependent stuff that users will want to change...
# stuff that isn't abstracted in the build system...
##########################################################################
include ${MK_DIR}/mk.hosttype
# IRIX
ifeq ($(HOSTTYPE), IRIX)
    LIBS = 
   include ${MK_DIR}/mk.irix
endif

#LiNUX
ifeq ($(HOSTTYPE), Linux)
endif

# Win32
ifeq ($(HOSTTYPE), Win32)
   LIBS = 
   DEPENDFLAGS = -D__cplusplus -D_WIN32 -DWIN32 $(INCLUDE_PATHS)
   include ${MK_DIR}/mk.win32
endif

# gnu2
ifeq ($(HOSTTYPE), GNU)
   LIBS = 
   include ${MK_DIR}/mk.gnu
endif
########################################################################

include ${MK_DIR}/mk.objs

# Compile then Link
build: $(OBJS)
	-@echo ""
	-@echo "-------------------------------------------"
	-@echo "Linking... (.$(OBJ_FILE_SUFFIX)'s --> .so)"
	-@echo "-------------------------------------------"
	$(EXE_LINKER) $(EXE_FLAGS) $(OBJS) $(OUTPUT_EXE_FLAG)$(FILENAME) $(LIBS)
	-@echo ""
	-@echo "-------------------------------------------"
	-@echo "$(FILENAME) done"
	-@echo "-------------------------------------------"

# Remove the compiled stuff from the system
clean:
	-@echo ""
	-@echo "-------------------------------------------"
	-@echo "Removing compiled stuff from the system	 "
	-@echo "-------------------------------------------"
	-rm -r $(OBJS) $(FILENAME) *.ncb *.opt *.plg *.ilk *.idb *.pdb *.pch Debug/ Release/ ii_files/



clobber: clean
	-rm *.d

include ${MK_DIR}/mk.depend
