#!/bin/sh

# **************** <Tweek heading BEGIN do not edit this line> ****************
#  Tweek
# 
#  -----------------------------------------------------------------
#  File:          $RCSfile$
#  Date modified: $Date$
#  Version:       $Revision$
#  -----------------------------------------------------------------
# **************** <Tweek heading END do not edit this line> ******************

# ************** <auto-copyright.pl BEGIN do not edit this line> **************
#
# VR Juggler is (C) Copyright 1998, 1999, 2000, 2001 by Iowa State University
#
# Original Authors:
#   Allen Bierbaum, Christopher Just,
#   Patrick Hartling, Kevin Meinert,
#   Carolina Cruz-Neira, Albert Baker
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# *************** <auto-copyright.pl END do not edit this line> ***************

%{
%}

tweek_extra_cxxflags="@tweek_extra_cxxflags@"
tweek_libs="@tweek_libs@"

tweek_default_abi="@ABI@"
tweek_default_isa="@ISA@"
tweek_n32_flags="@tweek_n32_flags@"
tweek_64_flags="@tweek_64_flags@"
LIBBITSUF='@LIBBITSUF@'

if [ "x$tweek_default_abi" = "xN32" ]; then
    tweek_abi_flags="$tweek_n32_flags"
elif [ "x$tweek_default_abi" = "x64" ]; then
    tweek_abi_flags="$tweek_64_flags"
else
    tweek_abi_flags=''
fi

if [ "x$tweek_default_isa" = "xmips3" -o "x$tweek_default_isa" = "xmips4" ]
then
    tweek_isa_flags="-$tweek_default_isa"
else
    tweek_isa_flags=''
fi

prefix=@prefix@
exec_prefix=@exec_prefix@
prefix_set='no'
exec_prefix_set='no'
use_include_dir='yes'
use_linker='no'

usage()
{
    if test "x$2" != "x" ; then
       echo "Unrecognized option '$2'"
    fi

    cat <<EOF
Usage: tweek-config [OPTIONS] [LIBRARIES]
Options:
        [--basedir]             Use \$TWEEK_BASE_DIR when printing paths
        [--no-includedir]       Do not append "/include" to the Tweek prefix
                                when extending the compiler's include path
        [--prefix[=DIR]]        Print the installation prefix or set an
                                alternate prefix to use when printing paths
        [--exec-prefix[=DIR]]   Print the executable prefix or set an
                                alternate executable prefix to use when
                                printing paths
        [--version]             Print the installed Tweek's version number
        [--cxxflags [N32|64]]   Print the flags for the C++ compiler
        [--libs [N32|64]]       Print the basic Tweek libraries
        [--extra-libs [N32|64]] Print the extra linker options needed for
                                making an executable
        [--linker]              Print libraries as direct arguments to the
                                linker rather than to the compiler
        [--idl cxx|java]        Print path to the IDL compiler used for
                                generating C++ or Java based on the given
                                parameter
        [--idlflags cxx|java]   Print flags passed to the IDL compiler for
                                generating C++ or Java based on the given
                                parameter
        [--idlgendir cxx|java]  Print flag passed to IDL compiler to specify
                                where the generated files (either C++ or Java
                                based on the given parameter) are written
        [--jars]                Print JAR files making up the Tweek Java API
                                libraries
        [--subsystem]           Print the VPR OS abstraction layer being used
EOF

    exit $1
}

if test $# -eq 0; then
    usage 1 1>&2
fi

while test $# -gt 0; do
    case "$1" in
        -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
        *) optarg= ;;
    esac

    case $1 in
        --basedir)
            use_base_dir=yes
            ;;
        --no-includedir)
            use_include_dir=no
            ;;
        --prefix=*)
            prefix=$optarg
            prefix_set='yes'

            if test $exec_prefix_set = no ; then
                exec_prefix=$optarg
            fi
            ;;
        --prefix)
            echo_prefix=yes
            ;;
        --exec-prefix=*)
            exec_prefix=$optarg
            exec_prefix_set=yes
            ;;
        --exec-prefix)
            echo_exec_prefix=yes
            ;;
        --version)
            echo @MAJOR_VERSION@.@MINOR_VERSION@.@MICRO_VERSION@
            ;;
        --cxxflags)
            echo_cxxflags=yes
            case $2 in
                --*)
                    # This is another option flag, so leave it alone.
                    ;;
                N32)
                    tweek_extra_cxxflags="$tweek_extra_cxxflags $tweek_n32_flags $tweek_isa_flags"
                    shift
                    ;;
                64)
                    tweek_extra_cxxflags="$tweek_extra_cxxflags $tweek_64_flags $tweek_isa_flags"
                    shift
                    ;;
                *)
                    tweek_extra_cxxflags="$tweek_extra_cxxflags $tweek_abi_flags $tweek_isa_flags"
                    if [ "x$2" != "x" ] ; then
                        shift
                    fi
                    ;;
            esac
            ;;
        --subsystem)
            echo @SUBSYSTEM@
            ;;
        --libs)
            echo_libs=yes
            case $2 in
                --*)
                    # This is another option flag, so leave it alone.
                    ;;
                N32)
                    ldflags="$tweek_n32_flags $tweek_isa_flags"
                    LIBBITSUF='32'
                    shift
                    ;;
                64)
                    ldflags="$tweek_64_flags $tweek_isa_flags"
                    LIBBITSUF='64'
                    shift
                    ;;
                *)
                    ldflags="$tweek_abi_flags $tweek_isa_flags"
                    if [ "x$2" != "x" ] ; then
                        shift
                    fi
                    ;;
            esac
            ;;
        --extra-libs)
            echo_extra_libs=yes
            case $2 in
                --*)
                    # This is another option flag, so leave it alone.
                    ;;
                N32)
                    LIBBITSUF='32'
                    shift
                    ;;
                64)
                    LIBBITSUF='64'
                    shift
                    ;;
                *)
                    if [ "x$2" != "x" ] ; then
                        shift
                    fi
                    ;;
            esac
            ;;
        --linker)
            use_linker='yes'
            ;;
        --idl)
            echo_idl="$2"
            shift
            ;;
        --idlflags)
            echo_idlflags="$2"
            shift
            ;;
        --idlgendir)
            echo_idlgendir="$2"
            shift
            ;;
        --static)
            echo_static='yes'
            ;;
        --jars)
            echo_jars='yes'
            ;;
        *)
            usage 1 $1 1>&2
            ;;
    esac
    shift
done

# If we are using $TWEEK_BASE_DIR, overwrite $prefix and $exec_prefix unless
# they were set explicitly on the command line.
if test "$use_base_dir" = "yes" ; then
    if test "$prefix_set" = "no" ; then
        prefix="$TWEEK_BASE_DIR"
    fi

    if test "$exec_prefix_set" = "no" ; then
        exec_prefix="$TWEEK_BASE_DIR"
    fi
fi

if test "$echo_prefix" = "yes"; then
    echo $prefix
fi

if test "$echo_exec_prefix" = "yes"; then
    echo $exec_prefix
fi

if test "$use_include_dir" = "yes" ; then
    include_dir='/include'
fi

if test "$echo_cxxflags" = "yes"; then
    echo @tweek_cxxflags@ $tweek_extra_cxxflags -I${prefix}${include_dir} $tweek_extra_includes
fi

if test "$echo_static" = "yes" ; then
    static_begin='@static_begin@'
    static_end='@static_end@'
fi

if test "$echo_libs" = "yes"; then
    my_subsystem_libs=

    if test "$use_base_dir" = "yes"; then
        ldflags="$ldflags -L$TWEEK_BASE_DIR/lib$LIBBITSUF"
    else
        if test "$use_linker" = "yes" ; then
            ldflags="$ldflags @tweek_ldflags_linker@"
        else
            ldflags="$ldflags @tweek_ldflags_compiler@"
        fi
    fi

    for i in $subsystem_libs ; do
        if test $i != -L@libdir@ ; then
            if test -z "$my_subsystem_libs" ; then
                my_subsystem_libs="$i"
            else
                my_subsystem_libs="$my_subsystem_libs $i"
            fi
        fi
    done

    echo $ldflags $static_begin $tweek_libs $static_end $my_subsystem_libs
fi      

if test "x$echo_extra_libs" = "xyes"; then
    tweek_extra_ldflags="@tweek_extra_ldflags@"
    tweek_extra_libs="@tweek_extra_libs@"
    echo $tweek_extra_ldflags $tweek_extra_libs
fi

if test "x$echo_idl" != "x" ; then
    if test "$echo_idl" = "cxx" ; then
       echo "@CXX_IDL@"
    elif test "$echo_idl" = "java" ; then
       echo "@JAVA_IDL@"
    else
       echo "ERROR: Unrecognized IDL flag type '$echo_idl'!"
       usage 1 1>&2
    fi
fi

if test "x$echo_idlflags" != "x" ; then
    if test "$echo_idlflags" = "cxx" ; then
       echo "@tweek_idlflags_cxx@"
    elif test "$echo_idlflags" = "java" ; then
       echo "@tweek_idlflags_java@"
    else
       echo "ERROR: Unrecognized IDL flag type '$echo_idlflags'!"
       usage 1 1>&2
    fi
fi

if test "x$echo_idlgendir" != "x" ; then
    if test "$echo_idlgendir" = "cxx" ; then
       echo "@tweek_idlgendir_cxx@"
    elif test "$echo_idlgendir" = "java" ; then
       echo "@tweek_idlgendir_java@"
    else
       echo "ERROR: Unrecognized IDL flag type '$echo_idlgendir'!"
       usage 1 1>&2
    fi
fi

if test "x$echo_jars" = "xyes" ; then
   echo @tweek_java_api_jars@
fi
