# **************** <Tweek heading BEGIN do not edit this line> ****************
# Tweek
#
# -----------------------------------------------------------------
# File:          $RCSfile$
# Date modified: $Date$
# Version:       $Revision$
# -----------------------------------------------------------------
# **************** <Tweek heading END do not edit this line> ******************

# ************** <auto-copyright.pl BEGIN do not edit this line> **************
#
# VR Juggler is (C) Copyright 1998, 1999, 2000, 2001 by Iowa State University
#
# Original Authors:
#   Allen Bierbaum, Christopher Just,
#   Patrick Hartling, Kevin Meinert,
#   Carolina Cruz-Neira, Albert Baker
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# *************** <auto-copyright.pl END do not edit this line> ***************

# -----------------------------------------------------------------------------
# Makefile.in for extensions/java.  It requires GNU make.
#
# Generated for use on @PLATFORM@
# -----------------------------------------------------------------------------

default: all

# Include common definitions.
include @topdir@/make.defs.mk

beandir					= $(bindir)/beans
srcdir					= @srcdir@
top_srcdir				= @top_srcdir@
INSTALL					= @INSTALL@
INSTALL_FILES			=

# For each package, we need the four lines to automatically add found sources
# to the build process. This allows us to not have to modify the build
# whenever new sources are added.
WIZARD_PKG		= org.vrjuggler.tweek.wizard;
WIZARD_DIR		= $(subst .,/,$(WIZARD_PKG))
WIZARD_SRCS		= $(patsubst $(srcdir)/%,%,$(wildcard $(srcdir)/$(WIZARD_DIR)/*.java))
WIZARD_CLASSES	= $(WIZARD_SRCS:.java=.class)

WIZARD_BUILDER_PKG		= org.vrjuggler.tweek.wizard.builder;
WIZARD_BUILDER_DIR		= $(subst .,/,$(WIZARD_BUILDER_PKG))
WIZARD_BUILDER_SRCS		= $(patsubst $(srcdir)/%,%,$(wildcard $(srcdir)/$(WIZARD_BUILDER_DIR)/*.java))
WIZARD_BUILDER_CLASSES	= $(WIZARD_BUILDER_SRCS:.java=.class)
# Misc files needed for java targets, such as gfx files and licenses

# Java targets
JARS		= wizard.jar
BEANS		= WizardBuilder

# List the packages for which JavaDoc documentation will be generated.
DOC_PKGS		= $(WIZARD_PKG) $(WIZARD_BUILDER_PKG)
webroot		= $(HOME)/public_html/jugglerweb
instdir		= tweek/wizard/1.0
doc_prefix	= $(webroot)/$(instdir)
DOC_ROOT		= programmer.reference.java

include $(MKPATH)/dpp.obj.mk

# -----------------------------------------------------------------------------
# JAR-related targets
# -----------------------------------------------------------------------------
jars: $(JARS) $(addsuffix .jar, $(BEANS))
ifdef GLOBAL_BUILD
	@$(MKINSTALLDIRS) $(top_srcdir)/bin
	cp $(JARS) $(addsuffix .jar, $(BEANS)) $(top_srcdir)/bin
endif

wizard.jar: $(WIZARD_CLASSES)
	$(JAR) cvf $@ $(WIZARD_CLASSES)

wizard_builder.jar: $(WIZARD_BUILDER_CLASSES)
	$(JAR) cvf $@ $(WIZARD_BUILDER_CLASSES)

# -----------------------------------------------------------------------------
# Extra targets
# -----------------------------------------------------------------------------
docs:
	$(JDK_HOME)/bin/javadoc -d $(DOC_ROOT) -sourcepath $(srcdir) \
          -classpath $(CLASSPATH) $(DOC_PKGS)

links:
	$(SHELL) $(MKINSTALLDIRS) $(instlinks)/bin/beans
	cd $(instlinks)/bin && \
          for jar in $(JARS) ; \
          do \
              rm $$jar ; \
              $(LN_S) $(topdir)/java/$$jar ./ ; \
          done
	cd $(instlinks)/bin/beans && \
          for bean in $(BEANS) ; \
          do \
              rm -f $$bean.jar ; \
              rm -f $$bean.xml ; \
              $(LN_S) $(topdir)/java/$$bean.jar ./ ; \
              $(LN_S) $(TWEEKROOT_ABS)/java/$$bean.xml ./ ; \
          done

# This cannot be named 'install' because Doozer++ already defines that.
extensions-install:
	@echo "------------------------------------------------"
	@echo "Installing the Tweek extensions"
	@echo "------------------------------------------------"
ifeq (@OS_TYPE@, UNIX)
	for jar in $(JARS) ; \
          do \
              $(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX) \
                $(topdir)/java/$$jar $(bindir) ; \
          done
	for bean in $(BEANS) ; \
          do \
              $(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX) \
                $(topdir)/java/$$bean.jar $(beandir) ; \
              $(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX) \
                $(top_srcdir)/java/$$bean.xml $(beandir) ; \
          done
endif

install-docs:
	$(MKINSTALLDIRS) $(doc_prefix)
	rm -rf $(doc_prefix)/$(DOC_ROOT)
	mv $(DOC_ROOT) $(doc_prefix)

CLEAN_FILES	+= $(JARS) \
					$(WIZARD_CLASSES) \
					$(WIZARD_BUILDER_CLASSES)

ifdef GLOBAL_BUILD
    CLEAN_DIRS	+= $(top_srcdir)/bin
endif

include Makefile.inc
