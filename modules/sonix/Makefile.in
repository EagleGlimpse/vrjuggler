default: all

include @topdir@/make.defs.mk

DEVELOPER_TREE       = ${topdir}/developer.tree
includedir           = ${DEVELOPER_TREE}/lib${LIBBITSUF}

AJ_LIBRARY           = @LIB_PREFIX@AudioJuggler
AJ_LIB_STATIC        = $(AJ_LIBRARY).$(STATICLIB_EXT)
AJ_LIB_DYNAMIC       = $(AJ_LIBRARY).$(DYNAMICLIB_EXT)

# setup the list of libs to be built...
LIBS        = $(AJ_LIBRARY)
STATIC_LIBS    = $(LIBS)
DYNAMIC_LIBS   = $(LIBS)

# Subdirectories used for recursion through the source tree.
SUBDIR          = aj 
#samples

#- Name of the directory where debugging objects and libraries
#                  are built.
DBG_DIR        = dbg

#- Name of the directory where optimized objects and libraries
#                  are built.
OPT_DIR        = opt

#- Default diretory for installations.
DEFAULT_DIR     = $(OPT_DIR)

# Extra compiler and linker options needed only by this file.
DBG_FLAGS       = -D_DEBUG @DBG_FLAGS@
OPT_FLAGS       = -D_OPT @OPT_FLAGS@

#- Full destination path for the compiled objects.
BUILDDIR       = ${topdir}/developer.tree

#- Full destination path for the compiled debugging
#                  objects.
#DBG_BUILDDIR   

#- Full destination path for the compiled optimizied
#                  objects.
#OPT_BUILDDIR   

#- Full destination path for the compiled libraries.
LIBDIR_BASE               = ${BUILDDIR}/lib${LIBBITSUF}
#LIBDIR               = ${BUILDDIR}/lib${LIBBITSUF}

#- Full destination path for the compiled debugging
#                  libraries.
DBG_LIBDIR           = ${LIBDIR}/dbg

#- Full destination path for the compiled optimized
#                 libraries.
OPT_LIBDIR           = ${LIBDIR}/opt

#- The permissions mask to use when installing files.
UMASK          = 022



include $(MKPATH)/dpp.libs.mk


# needed for compiling the DSO
EXTRA_LIBS      = @LIBS@ -lm


# -----------------------------------------------
# Construct the static version of the libraries.
# -----------------------------------------------
$(LIBDIR)/$(AJ_LIB_STATIC): $(OBJDIR)/*.$(OBJEXT)
	@echo "------------------------------------------------"
	@echo "Creating $@"
	@echo "------------------------------------------------"
	@$(SHELL) $(MKINSTALLDIRS) $(LIBDIR)
	$(AR) $(AR_NAME_FLAG)$@ $(OBJDIR)/*.$(OBJEXT)
	$(RANLIB) $@"
	cd $(LIBDIR_BASE) && rm -f $(notdir $@) && $(LN_S) $@ ./
	@echo "------------------------------------------------"
	@echo "$@ done"
	@echo "------------------------------------------------"

# ------------------------------------------------
# Construct the dynamic version of the libraries.
# ------------------------------------------------
$(LIBDIR)/$(AJ_LIB_DYNAMIC): $(OBJDIR)/*.$(OBJEXT)
	@echo "------------------------------------------------"
	@echo "Creating $@"
	@echo "------------------------------------------------"
	@$(SHELL) $(MKINSTALLDIRS) $(LIBDIR)
	$(LD) $(LDOPTS) -o $@ $(OBJDIR)/*.$(OBJEXT)
	cd $(LIBDIR_BASE) && rm -f $(notdir $@) && $(LN_S) $@ ./
	@echo "------------------------------------------------"
	@echo "$@ done"
	@echo "------------------------------------------------"

# =============================================================================
# Make links for developer use that provide the needed functionality for
# the $VJ_BASE_DIR environment variable to be used when needed.  $VJ_BASE_DIR
# should be set to $(instlinks).
# =============================================================================
links:
	@echo "------------------------------------------------"
	@echo "Setting up developer installation links"
	@echo "------------------------------------------------"
	$(SHELL) $(MKINSTALLDIRS) $(instlinks)
	$(SHELL) $(MKINSTALLDIRS) $(instlinks)/include
	cd $(instlinks)/include &&                                      \
          for dir in $(SUBDIR) ; do                                     \
              rm -f ./$$dir ;                                           \
              ln -s $(ROOT_ABS)/$$dir ./$$dir ;                       \
          done
	cd $(instlinks) && rm -f ./$(LIBDIR_NAME) &&                    \
      	  ln -s $(LIBDIR_BASE) ./$(LIBDIR_NAME)
	cd $(instlinks) && rm -rf ./share &&                  \
       	  $(SHELL) $(MKINSTALLDIRS) ./share
	cd $(instlinks)/share && rm -f ./samples &&                          \
          ln -s $(ROOT_ABS)/samples ./samples
	$(SHELL) $(MKINSTALLDIRS) $(instlinks)/bin
	@echo "\n\n"
	@echo "---------------------------------------------------------------"
	@echo 'You should now set $$AJ_BASE_DIR to:'
	@cd $(instlinks) && echo "  `pwd`"
	@echo "---------------------------------------------------------------"

# Remove the links in $(instlinks).
clean-links:
	@echo "------------------------------------------------"
	@echo "Removing developer installation links"
	@echo "------------------------------------------------"
	rm -rf $(instlinks)

pre-install-headers:
	$(MTREE_CMD) -Ude -f $(mtreedir)/VJ.include.dist -p $(prefix)

post-install-headers:
	$(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX)                   \
       	  $(VJROOT_ABS)/vjConfig.h $(includedir)/vjConfig.h
	$(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX)                   \
          $(topdir)/vjDefines.h $(includedir)
	$(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX)                   \
          $(topdir)/vjParam.h $(includedir)

# -----------------------------------------------------------------------------
# Clean-up.
# -----------------------------------------------------------------------------
include $(MKPATH)/dpp.clean.mk
CLEAN_DIRS      += $(BUILDDIR_BASE) $(LIBDIR_NAME)
CLOBBER_DIRS    += $(BUILDDIR_BASE) $(LIBDIR_NAME)


# this is for "ooops! i configured in the root dir of my project..."
cleanconfigure:
	rm config.cache configure config.status reconfig simple_config.h make.defs.mk config.log aclocal.m4 Makefile

include $(MKPATH)/dpp.subdir.mk
