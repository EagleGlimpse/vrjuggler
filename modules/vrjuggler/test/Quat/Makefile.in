# Generated by mkmakefile.pl.

default: testQuat@EXEEXT@

# Basic options.
srcdir		= @srcdir@
CFLAGS		= @APP_CFLAGS@ $(EXTRA_FLAGS) $(INCLUDES) $(DEFS)
CXXFLAGS	= @APP_CXXFLAGS@ $(EXTRA_FLAGS) $(INCLUDES) $(DEFS)
DEFS		= @APP_DEFS@
EXTRA_FLAGS	= @APP_EXTRA_FLAGS@ $(DEBUG_FLAGS)
DEBUG_FLAGS	= @APP_DEBUG_FLAGS@
OPTIM_FLAGS	= @APP_OPTIM_FLAGS@
INCLUDES	= @APP_INCLUDES@ -I$(srcdir)
LINK_FLAGS	= @APP_LINK_FLAGS@ $(EXTRA_FLAGS)

# Libraries needed for linking.
BASIC_LIBS	= @APP_BASIC_LIBS_BEGIN@ @APP_BASIC_LIBS@ @APP_BASIC_EXT_LIBS@ @APP_VJ_LIBS_GL@ @APP_BASIC_LIBS_END@
EXTRA_LIBS	= @APP_EXTRA_LIBS_BEGIN@ @APP_EXTRA_LIBS_GL@ @APP_EXTRA_LIBS@ @APP_EXTRA_LIBS_END@ 

# Commands to execute.
C_COMPILE	= @APP_CC@ $(CFLAGS)
CXX_COMPILE	= @APP_CXX@ $(CXXFLAGS)
LINK		= @APP_LINK@ $(LINK_FLAGS)

VPATH	= @srcdir@

OBJS	= glquat.@OBJEXT@ testQuat.@OBJEXT@

# -----------------------------------------------------------------------------
# Application build targets.
# -----------------------------------------------------------------------------
testQuat@EXEEXT@: $(OBJS)
	$(LINK) @EXE_NAME_FLAG@ $(OBJS) $(BASIC_LIBS) $(EXTRA_LIBS)

# Suffix rules for building object files.
.SUFFIXES: .c .cpp .@OBJEXT@

.c.@OBJEXT@:
	$(C_COMPILE) @OBJ_NAME_FLAG@ @OBJ_BUILD_FLAG@ $<

.cpp.@OBJEXT@:
	$(CXX_COMPILE) @OBJ_NAME_FLAG@ @OBJ_BUILD_FLAG@ $<

# -----------------------------------------------------------------------------
# Clean-up targets.
# -----------------------------------------------------------------------------
clean:
	rm -f Makedepend *.@OBJEXT@ testQuat.ilk  so_locations *.?db core*
	rm -rf ii_files

clobber:
	@$(MAKE) clean
	rm -f testQuat@EXEEXT@ 
